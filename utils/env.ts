// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT DIRECTLY MODIFY THIS FILE.
// YOUR CHANGES ARE LIKELY TO BE OVERRIDDEN IN THE FUTURE
export enum Doppler {
  NEXT_PUBLIC_ANALYTICS_ENABLED = 'NEXT_PUBLIC_ANALYTICS_ENABLED',
  NEXT_PUBLIC_APOLLO_AUTH_MESSAGE = 'NEXT_PUBLIC_APOLLO_AUTH_MESSAGE',
  NEXT_PUBLIC_BASE_URL = 'NEXT_PUBLIC_BASE_URL',
  NEXT_PUBLIC_BLOG_PAGES_ENABLED = 'NEXT_PUBLIC_BLOG_PAGES_ENABLED',
  NEXT_PUBLIC_CHAIN_ID = 'NEXT_PUBLIC_CHAIN_ID',
  NEXT_PUBLIC_DEBUG_LOGGING = 'NEXT_PUBLIC_DEBUG_LOGGING',
  NEXT_PUBLIC_DISCORD_COUNT = 'NEXT_PUBLIC_DISCORD_COUNT',
  NEXT_PUBLIC_EMAIL_COUNT = 'NEXT_PUBLIC_EMAIL_COUNT',
  NEXT_PUBLIC_ENGAGEMENT_LOGGING_ENABLED = 'NEXT_PUBLIC_ENGAGEMENT_LOGGING_ENABLED',
  NEXT_PUBLIC_ENV = 'NEXT_PUBLIC_ENV',
  NEXT_PUBLIC_FORCE_DARK_MODE = 'NEXT_PUBLIC_FORCE_DARK_MODE',
  NEXT_PUBLIC_GOOGLE_ANALYTICS_ID = 'NEXT_PUBLIC_GOOGLE_ANALYTICS_ID',
  NEXT_PUBLIC_GRAPHQL_URL = 'NEXT_PUBLIC_GRAPHQL_URL',
  NEXT_PUBLIC_HOMEPAGE_V2_ENABLED = 'NEXT_PUBLIC_HOMEPAGE_V2_ENABLED',
  NEXT_PUBLIC_ON_CHAIN_RESOLVER_ENABLED = 'NEXT_PUBLIC_ON_CHAIN_RESOLVER_ENABLED',
  NEXT_PUBLIC_PROFILE_LAYOUTS_ENABLED = 'NEXT_PUBLIC_PROFILE_LAYOUTS_ENABLED',
  NEXT_PUBLIC_ROUTER_ENABLED = 'NEXT_PUBLIC_ROUTER_ENABLED',
  NEXT_PUBLIC_SEARCH_ENABLED = 'NEXT_PUBLIC_SEARCH_ENABLED',
  NEXT_PUBLIC_SENTRY_DSN = 'NEXT_PUBLIC_SENTRY_DSN',
  NEXT_PUBLIC_SHOW_USER_BUTTON_NOTIFICATION = 'NEXT_PUBLIC_SHOW_USER_BUTTON_NOTIFICATION',
  NEXT_PUBLIC_SUPPORTED_NETWORKS = 'NEXT_PUBLIC_SUPPORTED_NETWORKS',
  NEXT_PUBLIC_TWITTER_COUNT = 'NEXT_PUBLIC_TWITTER_COUNT',
  NEXT_PUBLIC_TYPESENSE_APIKEY = 'NEXT_PUBLIC_TYPESENSE_APIKEY',
  NEXT_PUBLIC_TYPESENSE_HOST = 'NEXT_PUBLIC_TYPESENSE_HOST',
}

export function getEnv(name: Doppler): any {
  switch(name) {
  case Doppler.NEXT_PUBLIC_ANALYTICS_ENABLED: return process.env.NEXT_PUBLIC_ANALYTICS_ENABLED;
  case Doppler.NEXT_PUBLIC_APOLLO_AUTH_MESSAGE: return process.env.NEXT_PUBLIC_APOLLO_AUTH_MESSAGE;
  case Doppler.NEXT_PUBLIC_BASE_URL: return process.env.NEXT_PUBLIC_BASE_URL;
  case Doppler.NEXT_PUBLIC_BLOG_PAGES_ENABLED: return process.env.NEXT_PUBLIC_BLOG_PAGES_ENABLED;
  case Doppler.NEXT_PUBLIC_CHAIN_ID: return process.env.NEXT_PUBLIC_CHAIN_ID;
  case Doppler.NEXT_PUBLIC_DEBUG_LOGGING: return process.env.NEXT_PUBLIC_DEBUG_LOGGING;
  case Doppler.NEXT_PUBLIC_DISCORD_COUNT: return process.env.NEXT_PUBLIC_DISCORD_COUNT;
  case Doppler.NEXT_PUBLIC_EMAIL_COUNT: return process.env.NEXT_PUBLIC_EMAIL_COUNT;
  case Doppler.NEXT_PUBLIC_ENGAGEMENT_LOGGING_ENABLED: return process.env.NEXT_PUBLIC_ENGAGEMENT_LOGGING_ENABLED;
  case Doppler.NEXT_PUBLIC_ENV: return process.env.NEXT_PUBLIC_ENV;
  case Doppler.NEXT_PUBLIC_FORCE_DARK_MODE: return process.env.NEXT_PUBLIC_FORCE_DARK_MODE;
  case Doppler.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID: return process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID;
  case Doppler.NEXT_PUBLIC_GRAPHQL_URL: return process.env.NEXT_PUBLIC_GRAPHQL_URL;
  case Doppler.NEXT_PUBLIC_HOMEPAGE_V2_ENABLED: return process.env.NEXT_PUBLIC_HOMEPAGE_V2_ENABLED;
  case Doppler.NEXT_PUBLIC_ON_CHAIN_RESOLVER_ENABLED: return process.env.NEXT_PUBLIC_ON_CHAIN_RESOLVER_ENABLED;
  case Doppler.NEXT_PUBLIC_PROFILE_LAYOUTS_ENABLED: return process.env.NEXT_PUBLIC_PROFILE_LAYOUTS_ENABLED;
  case Doppler.NEXT_PUBLIC_ROUTER_ENABLED: return process.env.NEXT_PUBLIC_ROUTER_ENABLED;
  case Doppler.NEXT_PUBLIC_SEARCH_ENABLED: return process.env.NEXT_PUBLIC_SEARCH_ENABLED;
  case Doppler.NEXT_PUBLIC_SENTRY_DSN: return process.env.NEXT_PUBLIC_SENTRY_DSN;
  case Doppler.NEXT_PUBLIC_SHOW_USER_BUTTON_NOTIFICATION: return process.env.NEXT_PUBLIC_SHOW_USER_BUTTON_NOTIFICATION;
  case Doppler.NEXT_PUBLIC_SUPPORTED_NETWORKS: return process.env.NEXT_PUBLIC_SUPPORTED_NETWORKS;
  case Doppler.NEXT_PUBLIC_TWITTER_COUNT: return process.env.NEXT_PUBLIC_TWITTER_COUNT;
  case Doppler.NEXT_PUBLIC_TYPESENSE_APIKEY: return process.env.NEXT_PUBLIC_TYPESENSE_APIKEY;
  case Doppler.NEXT_PUBLIC_TYPESENSE_HOST: return process.env.NEXT_PUBLIC_TYPESENSE_HOST;
  }
}

export function getEnvBool(name: Doppler): boolean {
  const value = getEnv(name);
  if (typeof value === 'boolean') {
    return value;
  } else if (value === 'true') {
    return true;
  } else if (value === 'false') {
    return false;
  } else {
    throw new Error('Not a boolean environment variable');
  }
}