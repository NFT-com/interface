// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT DIRECTLY MODIFY THIS FILE.
// YOUR CHANGES ARE LIKELY TO BE OVERRIDDEN IN THE FUTURE
export enum Doppler {
  NEXT_PUBLIC_ANALYTICS_AGGREGATION_ENDPOINT = 'NEXT_PUBLIC_ANALYTICS_AGGREGATION_ENDPOINT',
  NEXT_PUBLIC_ANALYTICS_ENABLED = 'NEXT_PUBLIC_ANALYTICS_ENABLED',
  NEXT_PUBLIC_ANALYTICS_EVENT_ENDPOINT = 'NEXT_PUBLIC_ANALYTICS_EVENT_ENDPOINT',
  NEXT_PUBLIC_ANALYTICS_GQL_ENDPOINT = 'NEXT_PUBLIC_ANALYTICS_GQL_ENDPOINT',
  NEXT_PUBLIC_ANALYTICS_GRAPH_ENDPOINT = 'NEXT_PUBLIC_ANALYTICS_GRAPH_ENDPOINT',
  NEXT_PUBLIC_APOLLO_AUTH_MESSAGE = 'NEXT_PUBLIC_APOLLO_AUTH_MESSAGE',
  NEXT_PUBLIC_BASE_URL = 'NEXT_PUBLIC_BASE_URL',
  NEXT_PUBLIC_CHAIN_ID = 'NEXT_PUBLIC_CHAIN_ID',
  NEXT_PUBLIC_COLLECTION_PAGE_ENABLED = 'NEXT_PUBLIC_COLLECTION_PAGE_ENABLED',
  NEXT_PUBLIC_DEBUG_LOGGING = 'NEXT_PUBLIC_DEBUG_LOGGING',
  NEXT_PUBLIC_DEPLOYED_COLLECTIONS_ENABLED = 'NEXT_PUBLIC_DEPLOYED_COLLECTIONS_ENABLED',
  NEXT_PUBLIC_DISCORD_COUNT = 'NEXT_PUBLIC_DISCORD_COUNT',
  NEXT_PUBLIC_DISCOVER2_PHASE1_ENABLED = 'NEXT_PUBLIC_DISCOVER2_PHASE1_ENABLED',
  NEXT_PUBLIC_EMAIL_COUNT = 'NEXT_PUBLIC_EMAIL_COUNT',
  NEXT_PUBLIC_ENGAGEMENT_LOGGING_ENABLED = 'NEXT_PUBLIC_ENGAGEMENT_LOGGING_ENABLED',
  NEXT_PUBLIC_ENV = 'NEXT_PUBLIC_ENV',
  NEXT_PUBLIC_FORCE_DARK_MODE = 'NEXT_PUBLIC_FORCE_DARK_MODE',
  NEXT_PUBLIC_GA_ENABLED = 'NEXT_PUBLIC_GA_ENABLED',
  NEXT_PUBLIC_GOOGLE_ANALYTICS_ID = 'NEXT_PUBLIC_GOOGLE_ANALYTICS_ID',
  NEXT_PUBLIC_GRAPHQL_URL = 'NEXT_PUBLIC_GRAPHQL_URL',
  NEXT_PUBLIC_INDEXER_ENABLED = 'NEXT_PUBLIC_INDEXER_ENABLED',
  NEXT_PUBLIC_NATIVE_TRADING_TEST = 'NEXT_PUBLIC_NATIVE_TRADING_TEST',
  NEXT_PUBLIC_PROFILE_FACTORY_ENABLED = 'NEXT_PUBLIC_PROFILE_FACTORY_ENABLED',
  NEXT_PUBLIC_PROFILE_LAYOUTS_ENABLED = 'NEXT_PUBLIC_PROFILE_LAYOUTS_ENABLED',
  NEXT_PUBLIC_PROFILE_V2_ENABLED = 'NEXT_PUBLIC_PROFILE_V2_ENABLED',
  NEXT_PUBLIC_REORDER_ENABLED = 'NEXT_PUBLIC_REORDER_ENABLED',
  NEXT_PUBLIC_SEARCH_ENABLED = 'NEXT_PUBLIC_SEARCH_ENABLED',
  NEXT_PUBLIC_SEGMENT_API_KEY = 'NEXT_PUBLIC_SEGMENT_API_KEY',
  NEXT_PUBLIC_SENTRY_DSN = 'NEXT_PUBLIC_SENTRY_DSN',
  NEXT_PUBLIC_SHOW_USER_BUTTON_NOTIFICATION = 'NEXT_PUBLIC_SHOW_USER_BUTTON_NOTIFICATION',
  NEXT_PUBLIC_SUPPORTED_NETWORKS = 'NEXT_PUBLIC_SUPPORTED_NETWORKS',
  NEXT_PUBLIC_THEME_TOGGLE_ENABLED = 'NEXT_PUBLIC_THEME_TOGGLE_ENABLED',
  NEXT_PUBLIC_TWITTER_COUNT = 'NEXT_PUBLIC_TWITTER_COUNT',
  NEXT_PUBLIC_TYPESENSE_APIKEY = 'NEXT_PUBLIC_TYPESENSE_APIKEY',
  NEXT_PUBLIC_TYPESENSE_HOST = 'NEXT_PUBLIC_TYPESENSE_HOST',
  NEXT_PUBLIC_TYPESENSE_SETUP_ENABLED = 'NEXT_PUBLIC_TYPESENSE_SETUP_ENABLED',
}

export function getEnv(name: Doppler): any {
  switch(name) {
  case Doppler.NEXT_PUBLIC_ANALYTICS_AGGREGATION_ENDPOINT: return process.env.NEXT_PUBLIC_ANALYTICS_AGGREGATION_ENDPOINT;
  case Doppler.NEXT_PUBLIC_ANALYTICS_ENABLED: return process.env.NEXT_PUBLIC_ANALYTICS_ENABLED;
  case Doppler.NEXT_PUBLIC_ANALYTICS_EVENT_ENDPOINT: return process.env.NEXT_PUBLIC_ANALYTICS_EVENT_ENDPOINT;
  case Doppler.NEXT_PUBLIC_ANALYTICS_GQL_ENDPOINT: return process.env.NEXT_PUBLIC_ANALYTICS_GQL_ENDPOINT;
  case Doppler.NEXT_PUBLIC_ANALYTICS_GRAPH_ENDPOINT: return process.env.NEXT_PUBLIC_ANALYTICS_GRAPH_ENDPOINT;
  case Doppler.NEXT_PUBLIC_APOLLO_AUTH_MESSAGE: return process.env.NEXT_PUBLIC_APOLLO_AUTH_MESSAGE;
  case Doppler.NEXT_PUBLIC_BASE_URL: return process.env.NEXT_PUBLIC_BASE_URL;
  case Doppler.NEXT_PUBLIC_CHAIN_ID: return process.env.NEXT_PUBLIC_CHAIN_ID;
  case Doppler.NEXT_PUBLIC_COLLECTION_PAGE_ENABLED: return process.env.NEXT_PUBLIC_COLLECTION_PAGE_ENABLED;
  case Doppler.NEXT_PUBLIC_DEBUG_LOGGING: return process.env.NEXT_PUBLIC_DEBUG_LOGGING;
  case Doppler.NEXT_PUBLIC_DEPLOYED_COLLECTIONS_ENABLED: return process.env.NEXT_PUBLIC_DEPLOYED_COLLECTIONS_ENABLED;
  case Doppler.NEXT_PUBLIC_DISCORD_COUNT: return process.env.NEXT_PUBLIC_DISCORD_COUNT;
  case Doppler.NEXT_PUBLIC_DISCOVER2_PHASE1_ENABLED: return true;
  case Doppler.NEXT_PUBLIC_EMAIL_COUNT: return process.env.NEXT_PUBLIC_EMAIL_COUNT;
  case Doppler.NEXT_PUBLIC_ENGAGEMENT_LOGGING_ENABLED: return process.env.NEXT_PUBLIC_ENGAGEMENT_LOGGING_ENABLED;
  case Doppler.NEXT_PUBLIC_ENV: return process.env.NEXT_PUBLIC_ENV;
  case Doppler.NEXT_PUBLIC_FORCE_DARK_MODE: return process.env.NEXT_PUBLIC_FORCE_DARK_MODE;
  case Doppler.NEXT_PUBLIC_GA_ENABLED: return true;
  case Doppler.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID: return process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID;
  case Doppler.NEXT_PUBLIC_GRAPHQL_URL: return process.env.NEXT_PUBLIC_GRAPHQL_URL;
  case Doppler.NEXT_PUBLIC_INDEXER_ENABLED: return process.env.NEXT_PUBLIC_INDEXER_ENABLED;
  case Doppler.NEXT_PUBLIC_NATIVE_TRADING_TEST: return process.env.NEXT_PUBLIC_NATIVE_TRADING_TEST;
  case Doppler.NEXT_PUBLIC_PROFILE_FACTORY_ENABLED: return process.env.NEXT_PUBLIC_PROFILE_FACTORY_ENABLED;
  case Doppler.NEXT_PUBLIC_PROFILE_LAYOUTS_ENABLED: return process.env.NEXT_PUBLIC_PROFILE_LAYOUTS_ENABLED;
  case Doppler.NEXT_PUBLIC_PROFILE_V2_ENABLED: return process.env.NEXT_PUBLIC_PROFILE_V2_ENABLED;
  case Doppler.NEXT_PUBLIC_REORDER_ENABLED: return process.env.NEXT_PUBLIC_REORDER_ENABLED;
  case Doppler.NEXT_PUBLIC_SEARCH_ENABLED: return process.env.NEXT_PUBLIC_SEARCH_ENABLED;
  case Doppler.NEXT_PUBLIC_SEGMENT_API_KEY: return process.env.NEXT_PUBLIC_SEGMENT_API_KEY;
  case Doppler.NEXT_PUBLIC_SENTRY_DSN: return process.env.NEXT_PUBLIC_SENTRY_DSN;
  case Doppler.NEXT_PUBLIC_SHOW_USER_BUTTON_NOTIFICATION: return process.env.NEXT_PUBLIC_SHOW_USER_BUTTON_NOTIFICATION;
  case Doppler.NEXT_PUBLIC_SUPPORTED_NETWORKS: return process.env.NEXT_PUBLIC_SUPPORTED_NETWORKS;
  case Doppler.NEXT_PUBLIC_THEME_TOGGLE_ENABLED: return process.env.NEXT_PUBLIC_THEME_TOGGLE_ENABLED;
  case Doppler.NEXT_PUBLIC_TWITTER_COUNT: return process.env.NEXT_PUBLIC_TWITTER_COUNT;
  case Doppler.NEXT_PUBLIC_TYPESENSE_APIKEY: return process.env.NEXT_PUBLIC_TYPESENSE_APIKEY;
  case Doppler.NEXT_PUBLIC_TYPESENSE_HOST: return process.env.NEXT_PUBLIC_TYPESENSE_HOST;
  case Doppler.NEXT_PUBLIC_TYPESENSE_SETUP_ENABLED: return process.env.NEXT_PUBLIC_TYPESENSE_SETUP_ENABLED;
  }
}

export function getEnvBool(name: Doppler): boolean {
  const value = getEnv(name);
  if (typeof value === 'boolean') {
    return value;
  } else if (value === 'true') {
    return true;
  } else if (value === 'false') {
    return false;
  } else {
    throw new Error('Not a boolean environment variable');
  }
}
