name: Deploy NFT.com Frontend
env:
  NETLIFY_SITE_ID: ${{secrets.NETLIFY_SITE_ID }}
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_GH_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on: push

jobs:
  
  cypress-tests:
    if: ${{ github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2.4.2
      
    - name: Install Doppler CLI
      uses: dopplerhq/cli-action@v1

    - name: Configure Doppler Config
      run: |
        doppler setup -t ${{ secrets.DOPPLER_TOKEN }} -p interface -c dev_gh-actions --no-interactive
        
    - uses: actions/checkout@v2
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
    
    - run: yarn
    - run: yarn typechain:gen
    - run: yarn build
        
    - name: Cypress run - e2e ðŸ§ª
      uses: cypress-io/github-action@v4
      with:
        install: false
        start: yarn start
        record: true
        component: false
        browser: chrome
        tag: ${{ github.ref_name }}
      env:
        DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        CYPRESS_BASE_URL: ${{ secrets.CYPRESS_BASE_URL }}
        CYPRESS_NETWORK: ${{ secrets.CYPRESS_NETWORK }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Cypress run - component ðŸ§ª
      uses: cypress-io/github-action@v4
      with:
        install: false
        component: true
        record: true
        tag: ${{ github.ref_name }}
      env:
        DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        CYPRESS_BASE_URL: ${{ secrets.CYPRESS_BASE_URL }}
        CYPRESS_NETWORK: ${{ secrets.CYPRESS_NETWORK }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NEXT_PUBLIC_ANALYTICS_ENABLED: ${{ secrets.NEXT_PUBLIC_ANALYTICS_ENABLED }}
        NEXT_PUBLIC_APOLLO_AUTH_MESSAGE: ${{ secrets.NEXT_PUBLIC_APOLLO_AUTH_MESSAGE }}
        NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
        NEXT_PUBLIC_CHAIN_ID: ${{ secrets.NEXT_PUBLIC_CHAIN_ID }}
        NEXT_PUBLIC_COLLECTION_PAGE_ENABLED: ${{ secrets.NEXT_PUBLIC_COLLECTION_PAGE_ENABLED }}
        NEXT_PUBLIC_DEBUG_LOGGING: ${{ secrets.NEXT_PUBLIC_DEBUG_LOGGING }}
        NEXT_PUBLIC_ENGAGEMENT_LOGGING_ENABLED: ${{ secrets.NEXT_PUBLIC_ENGAGEMENT_LOGGING_ENABLED }}
        NEXT_PUBLIC_ENV: ${{ secrets.NEXT_PUBLIC_ENV }}
        NEXT_PUBLIC_NFT_OFFER_RESKIN_ENABLED: ${{ secrets.NEXT_PUBLIC_NFT_OFFER_RESKIN_ENABLED }}
        NEXT_PUBLIC_GOOGLE_ANALYTICS_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID }}
        NEXT_PUBLIC_GRAPHQL_URL: ${{ secrets.NEXT_PUBLIC_GRAPHQL_URL }}
        NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
        NEXT_PUBLIC_SHOW_USER_BUTTON_NOTIFICATION: ${{ secrets.NEXT_PUBLIC_SHOW_USER_BUTTON_NOTIFICATION }}
        NEXT_PUBLIC_SUPPORTED_NETWORKS: ${{ secrets.NEXT_PUBLIC_SUPPORTED_NETWORKS }}
        NEXT_PUBLIC_THEME_TOGGLE_ENABLED: ${{ secrets.NEXT_PUBLIC_THEME_TOGGLE_ENABLED }}
        NEXT_PUBLIC_TYPESENSE_APIKEY: ${{ secrets.NEXT_PUBLIC_TYPESENSE_APIKEY }}
        NEXT_PUBLIC_TYPESENSE_HOST: ${{ secrets.NEXT_PUBLIC_TYPESENSE_HOST }}
        NEXT_PUBLIC_TYPESENSE_SETUP_ENABLED: ${{ secrets.NEXT_PUBLIC_TYPESENSE_SETUP_ENABLED }}
        NEXT_PUBLIC_GA_ENABLED: ${{ secrets.NEXT_PUBLIC_GA_ENABLED }}
        NEXT_PUBLIC_MOSAIC_LAYOUT_ENABLED: ${{ secrets.NEXT_PUBLIC_MOSAIC_LAYOUT_ENABLED }}
        NEXT_PUBLIC_DEV_CONTENT_MODEL_ENABLED: ${{ secrets.NEXT_PUBLIC_DEV_CONTENT_MODEL_ENABLED }}
        NEXT_PUBLIC_ENGLISH_AUCTION_ENABLED: ${{ secrets.NEXT_PUBLIC_ENGLISH_AUCTION_ENABLED }}
        NEXT_PUBLIC_NFTCOM_NO_EXPIRATION_LISTING_ENABLED: ${{ secrets.NEXT_PUBLIC_NFTCOM_NO_EXPIRATION_LISTING_ENABLED }}

    - name: âœ… Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}


  deploy-sandbox:
    if: ${{ github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    environment: sandbox
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install --frozen-lockfile --immutable

      - name: Deploy Site to Netlify
        run: netlify deploy --build --prod --message "main@${{ github.sha }}"

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel Sandbox
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
  
  deploy-staging:
    if: ${{ github.ref_type == 'tag' && startsWith(github.ref_name, 'staging') }}
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install --frozen-lockfile --immutable

      - name: Deploy Site to Netlify
        run: netlify deploy --build --prod --message "staging@${{ github.sha }}"

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel Staging
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        
  deploy-prod:
    if: ${{ github.ref_type == 'tag' && startsWith(github.ref_name, 'prod') }}
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install --frozen-lockfile --immutable

      - name: Deploy Site to Netlify
        run: netlify deploy --build --prod --message "prod@${{ github.sha }}"

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel Production
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}