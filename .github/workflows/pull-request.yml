name: Build and Test
on: pull_request

jobs:
  install:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v1

      - name: Configure Doppler Config
        run: |
          doppler setup -t ${{ secrets.DOPPLER_TOKEN }} -p interface -c dev_gh-actions --no-interactive

      - name: Cypress build step
        uses: cypress-io/github-action@v4
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        with:
          install-command: yarn --frozen-lockfile --immutable --silent
          # Disable running of tests within install job
          runTests: false
          build: yarn build

      - name: Save build folder for other jobs
        uses: actions/upload-artifact@v2
        with:
          name: nextbuild
          if-no-files-found: error
          path: .next

  component-tests:
    runs-on: ubuntu-latest
    environment: dev
    needs: [install]
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        container: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
    steps:
    - name: Checkout
      uses: actions/checkout@v2.4.2

    - name: Install Doppler CLI
      uses: dopplerhq/cli-action@v1

    - name: Configure Doppler Config
      run: |
        doppler setup -t ${{ secrets.DOPPLER_TOKEN }} -p interface -c dev_gh-actions --no-interactive
    
    - name: Download the build folders
      uses: actions/download-artifact@v2
      with:
        name: nextbuild
        path: .next

    - run: yarn
    - run: yarn typechain:gen

    - name: Cypress run - component ðŸ§ª
      uses: cypress-io/github-action@v4
      with:
        install: false
        start: yarn start
        component: true
        record: true
        tag: ${{ github.ref_name }}
        parallel: true
      env:
        DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        CYPRESS_BASE_URL: ${{ secrets.CYPRESS_BASE_URL }}
        CYPRESS_NETWORK: ${{ secrets.CYPRESS_NETWORK }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NEXT_PUBLIC_ANALYTICS_ENABLED: ${{ secrets.NEXT_PUBLIC_ANALYTICS_ENABLED }}
        NEXT_PUBLIC_APOLLO_AUTH_MESSAGE: ${{ secrets.NEXT_PUBLIC_APOLLO_AUTH_MESSAGE }}
        NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
        NEXT_PUBLIC_BLOG_PAGES_ENABLED: ${{ secrets.NEXT_PUBLIC_BLOG_PAGES_ENABLED }}
        NEXT_PUBLIC_CHAIN_ID: ${{ secrets.NEXT_PUBLIC_CHAIN_ID }}
        NEXT_PUBLIC_COLLECTION_PAGE_ENABLED: ${{ secrets.NEXT_PUBLIC_COLLECTION_PAGE_ENABLED }}
        NEXT_PUBLIC_DEBUG_LOGGING: ${{ secrets.NEXT_PUBLIC_DEBUG_LOGGING }}
        NEXT_PUBLIC_DEPLOYED_COLLECTIONS_ENABLED: ${{ secrets.NEXT_PUBLIC_DEPLOYED_COLLECTIONS_ENABLED }}
        NEXT_PUBLIC_DISCORD_COUNT: ${{ secrets.NEXT_PUBLIC_DISCORD_COUNT }}
        NEXT_PUBLIC_EMAIL_COUNT: ${{ secrets.NEXT_PUBLIC_EMAIL_COUNT }}
        NEXT_PUBLIC_ENGAGEMENT_LOGGING_ENABLED: ${{ secrets.NEXT_PUBLIC_ENGAGEMENT_LOGGING_ENABLED }}
        NEXT_PUBLIC_ENV: ${{ secrets.NEXT_PUBLIC_ENV }}
        NEXT_PUBLIC_FORCE_DARK_MODE: ${{ secrets.NEXT_PUBLIC_FORCE_DARK_MODE }}
        NEXT_PUBLIC_GOOGLE_ANALYTICS_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID }}
        NEXT_PUBLIC_GRAPHQL_URL: ${{ secrets.NEXT_PUBLIC_GRAPHQL_URL }}
        NEXT_PUBLIC_ON_CHAIN_RESOLVER_ENABLED: ${{ secrets.NEXT_PUBLIC_ON_CHAIN_RESOLVER_ENABLED }}
        NEXT_PUBLIC_PROFILE_FACTORY_ENABLED: ${{ secrets.NEXT_PUBLIC_PROFILE_FACTORY_ENABLED }}
        NEXT_PUBLIC_PROFILE_LAYOUTS_ENABLED: ${{ secrets.NEXT_PUBLIC_PROFILE_LAYOUTS_ENABLED }}
        NEXT_PUBLIC_REORDER_ENABLED: ${{ secrets.NEXT_PUBLIC_REORDER_ENABLED }}
        NEXT_PUBLIC_ROUTER_ENABLED: ${{ secrets.NEXT_PUBLIC_ROUTER_ENABLED }}
        NEXT_PUBLIC_SEARCH_ENABLED: ${{ secrets.NEXT_PUBLIC_SEARCH_ENABLED }}
        NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
        NEXT_PUBLIC_SHOW_USER_BUTTON_NOTIFICATION: ${{ secrets.NEXT_PUBLIC_SHOW_USER_BUTTON_NOTIFICATION }}
        NEXT_PUBLIC_SUPPORTED_NETWORKS: ${{ secrets.NEXT_PUBLIC_SUPPORTED_NETWORKS }}
        NEXT_PUBLIC_THEME_TOGGLE_ENABLED: ${{ secrets.NEXT_PUBLIC_THEME_TOGGLE_ENABLED }}
        NEXT_PUBLIC_TWITTER_COUNT: ${{ secrets.NEXT_PUBLIC_TWITTER_COUNT }}
        NEXT_PUBLIC_TYPESENSE_APIKEY: ${{ secrets.NEXT_PUBLIC_TYPESENSE_APIKEY }}
        NEXT_PUBLIC_TYPESENSE_HOST: ${{ secrets.NEXT_PUBLIC_TYPESENSE_HOST }}
        NEXT_PUBLIC_UBIQUITY_API_KEY: ${{ secrets.NEXT_PUBLIC_UBIQUITY_API_KEY }}

    - name: âœ… Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  e2e-tests:
    runs-on: ubuntu-latest
    environment: dev
    needs: [install]
    steps:
    - name: Checkout
      uses: actions/checkout@v2.4.2
      
    - name: Install Doppler CLI
      uses: dopplerhq/cli-action@v1

    - name: Configure Doppler Config
      run: |
        doppler setup -t ${{ secrets.DOPPLER_TOKEN }} -p interface -c dev_gh-actions --no-interactive
    
    - name: Download the build folders
      uses: actions/download-artifact@v2
      with:
        name: nextbuild
        path: .next

    - run: yarn
    - run: yarn typechain:gen

    - name: Cypress run - e2e ðŸ§ª
      uses: cypress-io/github-action@v4
      with:
        install: false
        start: yarn start
        component: false
        browser: chrome
        record: true
        tag: ${{ github.ref_name }}
      env:
        DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        CYPRESS_BASE_URL: ${{ secrets.CYPRESS_BASE_URL }}
        CYPRESS_NETWORK: ${{ secrets.CYPRESS_NETWORK }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: âœ… Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  deploy-preview:
    if: startsWith(github.base_ref, 'feat') || startsWith(github.base_ref, 'fix') || startsWith(github.base_ref, 'main')
    runs-on: ubuntu-latest
    environment: sandbox
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
        
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v1

      - name: Configure Doppler Config
        run: |
          doppler setup -t ${{ secrets.DOPPLER_TOKEN }} -p interface -c dev_gh-actions --no-interactive
        
      - name: Checkout
        uses: actions/checkout@v2.4.2
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install --frozen-lockfile --immutable

      - name: Deploy Site
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_GH_TOKEN }}
        run: netlify deploy --build --message "main@${{ github.sha }}"
